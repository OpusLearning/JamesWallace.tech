name: Build and Deploy Frontend

on:
  push:
    branches:
      - main
      - tutoring-rebrand

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: '20' # LTS, safest with Vite

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install & build (frontend)
        working-directory: frontend
        run: |
          npm ci
          npm run build

      # Decide target directory based on branch
      - name: Set deploy target dir
        run: |
          if [ "${GITHUB_REF_NAME}" = "main" ]; then
            echo "TARGET_DIR=/var/www/jameswallace.tech" >> $GITHUB_ENV
          else
            echo "TARGET_DIR=/var/www/jameswallace.tech-staging" >> $GITHUB_ENV
          fi

      # Upload built assets to the server (copies frontend/dist/* into TARGET_DIR)
      - name: Upload build to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          port: ${{ secrets.SERVER_PORT }}
          source: "frontend/dist/*"
          target: "${{ env.TARGET_DIR }}"
          strip_components: 2
          overwrite: true

      - name: Finalise & reload Nginx
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            sudo chown -R www-data:www-data "${{ env.TARGET_DIR }}"
            sudo find "${{ env.TARGET_DIR }}" -type d -exec chmod 755 {} \;
            sudo find "${{ env.TARGET_DIR }}" -type f -exec chmod 644 {} \;
            sudo systemctl reload nginx
